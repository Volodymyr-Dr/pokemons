{"version":3,"sources":["components/PokemonList.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonList","id","image","name","type","attack","defense","hp","sp_attack","sp_defense","speed","weight","total_moves","type_style","to","className","src","alt","path","HomeComponent","useState","allPokemons","setAllPokemons","loadMore","setLoadMore","getAllPokemons","createPokemonObject","a","results","map","pokemon","fetch","res","json","data","console","log","currentList","sort","b","next","useEffect","pokemonStats","index","sprites","other","dream_world","front_default","types","stats","base_stat","moves","length","onClick","App","component","PokemonInfo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96c309bb.chunk.js","sourcesContent":["import React from 'react'\nimport {Link, Switch, Route} from 'react-router-dom'\n\nconst PokemonList = ({id, image, name, type, attack, defense, hp, sp_attack, sp_defense, speed, weight, total_moves}) => {\n\n    const type_style = type + \" type_button\"\n\n    return (\n        <div>\n        <Link to={`/${id}`}>\n            <div>\n                <div className=\"thumb-container\">\n                    <img src={image} alt={name} />\n                    <div className=\"detail-wrapper\">\n                        <h3>{name}</h3>\n                        <div className={type_style}>{type}</div>\n                    </div>\n                </div>    \n            </div> \n        </Link>\n        <Switch>\n            <Route path={`/${id}`}>\n                <div className={type_style + \" thumb-container position\"}>\n                    <img src={image} alt={name} />\n                    <div className=\"detail-wrapper\">\n                        <h3>{name} #0{id}</h3>\n                    </div>\n                    <div className=\"characteristics_table\"> \n                        <div className=\"characteristics\">Type</div>\n                        <div className=\"value\">{type}</div>\n                    </div>\n                    <div className=\"characteristics_table\"> \n                        <div className=\"characteristics\">Attack</div>\n                        <div className=\"value\">{attack}</div>\n                    </div>\n                    <div className=\"characteristics_table\"> \n                        <div className=\"characteristics\">Defense</div>\n                        <div className=\"value\">{defense}</div>\n                    </div>\n                    <div className=\"characteristics_table\"> \n                        <div className=\"characteristics\">HP</div>\n                        <div className=\"value\">{hp}</div>\n                    </div>\n                    <div className=\"characteristics_table\"> \n                        <div className=\"characteristics\">SP Attack</div>\n                        <div className=\"value\">{sp_attack}</div>\n                    </div>\n                    <div className=\"characteristics_table\"> \n                        <div className=\"characteristics\">SP Defense</div>\n                        <div className=\"value\">{sp_defense}</div>\n                    </div>\n                    <div className=\"characteristics_table\"> \n                        <div className=\"characteristics\">Speed</div>\n                        <div className=\"value\">{speed}</div>\n                    </div>\n                    <div className=\"characteristics_table\"> \n                        <div className=\"characteristics\">Weight</div>\n                        <div className=\"value\">{weight}</div>\n                    </div>\n                    <div className=\"characteristics_table\"> \n                        <div className=\"characteristics\">Total moves</div>\n                        <div className=\"value\">{total_moves}</div>\n                    </div>\n                </div>\n            </Route>\n        </Switch>\n        </div>\n        \n    )\n}\n\nexport default PokemonList\n","import React, { useEffect, useState } from 'react'\nimport { Switch, Route } from 'react-router-dom';\n\nimport PokemonList from './components/PokemonList'\nimport PokemonInfo from './components/PokemonInfo'\n\nimport './App.css'\n\n\nconst HomeComponent = () => {\n    const [allPokemons, setAllPokemons] = useState([])\n    const [loadMore, setLoadMore] = useState('https://pokeapi.co/api/v2/pokemon?limit=12')\n \n\n   const getAllPokemons = async () => {\n     const res = await fetch(loadMore)\n     const data = await res.json()\n \n     setLoadMore(data.next)\n \n     function createPokemonObject(results)  {\n         setAllPokemons([])\n       results.map( async pokemon => {\n         const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\n         const data =  await res.json()\n         console.log(data)\n         setAllPokemons( currentList => [...currentList, data])\n         await allPokemons.sort((a, b) => a.id - b.id)\n       })\n     }\n     createPokemonObject(data.results)\n   }\n  \n  useEffect(() => {\n   getAllPokemons()\n  }, [])\n \n   return <div className=\"app-contaner\">\n       <h1>Pokedex</h1>\n       <div className=\"pokemon-container\">\n         <div className=\"all-container\">\n           {allPokemons.map( (pokemonStats, index) => \n             <PokemonList\n                key={pokemonStats.id}\n               id={pokemonStats.id}\n               image={pokemonStats.sprites.other.dream_world.front_default}\n               name={pokemonStats.name}\n               type={pokemonStats.types[0].type.name}\n               attack={pokemonStats.stats[1].base_stat}\n               defense={pokemonStats.stats[2].base_stat}\n               hp={pokemonStats.stats[0].base_stat}\n               sp_attack={pokemonStats.stats[3].base_stat}\n               sp_defense={pokemonStats.stats[4].base_stat}\n               speed={pokemonStats.stats[5].base_stat}\n               weight={pokemonStats.weight}\n               total_moves={pokemonStats.moves.length}\n             />)} \n         </div>\n\n           <button className=\"load-more\" onClick={getAllPokemons}>Load more</button>\n       </div>\n     </div>\n   \n};\n\nfunction App() {\n    return (  \n       <Switch>\n           <Route  path=\"/\" component={HomeComponent}/>\n\n           <Route path=\"/:id\" component={PokemonInfo}/>\n       </Switch>\n    );\n    \n }\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}